{{- if and (.Values.adminApi.enabled) (eq (include "kong.isZipkinEnabled" $) "true") }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-zipkin-setup
  labels: {{ include "kong.labels" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: {{ .Values.setupJobs.backoffLimit | default 15 }}
  activeDeadlineSeconds: {{ .Values.setupJobs.activeDeadlineSeconds | default 3600 }}
  template:
    spec:
      {{- include "image_pull_secrets" $ | indent 6 }}
      securityContext: {{ include "platformSpecificValue" (list $ . ".Values.podSecurityContext") | default "{}" | nindent 8 }}
      containers:
      - name: zipkin-setup
        image: {{ include "job.image" $ }}
        securityContext: {{ include "platformSpecificValue" (list $ . ".Values.jobs.containerSecurityContext") | default "{}" | nindent 10 }}
        env:
        - name: X_TARDIS_GATEWAY_ADMIN
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}
              key: gatewayAdminApiKey
        command:        
          - /bin/bash
          - -c
          - |- 
            echo "Enabling Kong ENI flavoured Zipkin plugin via PUT {{ include "kong.adminApi.serviceUrl" . }}/plugins"

            ADMIN_API_HTTP_RETURN_CODE=`curl -Is -o /dev/null -w "%{http_code}" -u "admin:$X_TARDIS_GATEWAY_ADMIN" -X GET {{ include "kong.adminApi.serviceUrl" . }}`
            if [ "$ADMIN_API_HTTP_RETURN_CODE" != "200" ]; then
                echo "Kong Admin-API unreachable return: $ADMIN_API_HTTP_RETURN_CODE"
                exit 1
            fi

            CONFIG_CALL_HTTP_RETURN_CODE=`curl \
            -o /dev/null \
            -w "%{http_code}" \
            -u "admin:$X_TARDIS_GATEWAY_ADMIN" \
            -X PUT {{ include "kong.adminApi.serviceUrl" . }}/plugins/{{ .Values.plugins.zipkin.pluginId }} \
            --header 'Content-Type: application/json' \
            --data \
            '{
              "name" : "zipkin",
              "tags" : ["tardis","zipkin","eni-zipkin"],
              "config" : {
                "http_endpoint" : "{{ .Values.plugins.zipkin.collectorUrl | default .Values.global.tracing.collectorUrl }}",
                "sample_ratio" : {{ .Values.plugins.zipkin.sampleRatio | default .Values.global.tracing.sampleRatio }},
                "include_credential" : {{ .Values.plugins.zipkin.includeCredential | default true }},
                "default_service_name" : "{{ .Values.plugins.zipkin.defaultServiceName | default .Values.global.tracing.defaultServiceName }}",
                "local_component_name" : "{{ .Values.plugins.zipkin.defaultServiceName | default .Values.global.tracing.defaultServiceName }}",
                "environment" : "{{ .Values.plugins.zipkin.environment | default .Values.global.environment | default .Values.global.metadata.environment | default "default" }}",
                "zone" : "{{ .Values.plugins.zipkin.zone | default .Values.global.zone | default .Values.global.platform  | default "unknown" }}",
                "force_sample" : {{ .Values.plugins.zipkin.forceSample | default true }},
                "header_type" : "{{ .Values.plugins.zipkin.headerType | default "b3" }}"
              }
            }'`

            if [ "$CONFIG_CALL_HTTP_RETURN_CODE" != "200" ] && [ "$CONFIG_CALL_HTTP_RETURN_CODE" != "201" ]; then
              echo "Configuring plugin failed"
              exit 1
            fi

      restartPolicy: OnFailure
{{- end }}
