{{- if .Values.issuerService.enabled }}
apiVersion: v1
kind: Secret
metadata:
  {{- $name := printf "%s-%s" .Release.Name "issuer-service" }}
  name: {{ $name }}
  labels: {{ include "kong.labels" $ | nindent 4 }}
  annotations: {{ include "argo.pathToSecret" $ | nindent 4 }}
type: Opaque
data:
{{- $failOnUnsetValues := eq (toString .Values.global.failOnUnsetValues) "true" }}
{{- $defaultUnsetValue := "changeme" }}
{{- $unsetValues := list }}
{{- $certsJson := .Values.issuerService.certsJson }}
{{- if not (and (eq $certsJson $defaultUnsetValue) $failOnUnsetValues) }}
  certsJson: {{ $certsJson | b64enc | quote }}
{{- else }}
{{- $unsetValues = append $unsetValues "certsJson" }}
{{- end }}
{{- $publicJson := .Values.issuerService.publicJson }}
{{- if not (and (eq $publicJson $defaultUnsetValue) $failOnUnsetValues) }}
  publicJson: {{ $publicJson | b64enc | quote }}
{{- else }}
{{- $unsetValues = append $unsetValues "publicJson" }}
{{- end }}
{{- $privateJson := .Values.issuerService.privateJson }}
{{- if not (and (eq $privateJson $defaultUnsetValue) $failOnUnsetValues) }}
  privateJson: {{ $privateJson | b64enc | quote }}
{{- else }}
{{- $unsetValues = append $unsetValues "privateJson" }}
{{- end }}
{{- if and .Values.global.failOnUnsetValues (gt (len $unsetValues) 0) }}
{{- fail (printf "Values not set in %s: %v" $name $unsetValues) }}
{{- end }}
{{- end -}}
